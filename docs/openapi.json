{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Lanchonete - 9SOAT",
    "description": "Aplicação para gerenciamento de pedidos\n\nTurma 9SOAT",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Repositório",
    "url": "https://github.com/matheustrindade/lanchonete-9soat-fase1"
  },
  "tags": [
    {
      "name": "healthy",
      "description": "Application health check"
    },
    {
      "name": "Products",
      "description": "Operations for products"
    },
    {
      "name": "Shopping Cart",
      "description": "Operations for Shopping Cart"
    },
    {
      "name": "Orders",
      "description": "Operations for Orders"
    }
  ],
  "paths": {
    "/healthy": {
      "get": {
        "tags": [
          "healthy"
        ],
        "summary": "Verifica estado da aplicação",
        "responses": {
          "200": {
            "description": "sucesso"
          },
          "500": {
            "description": "erro"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create product",
        "requestBody": {
          "description": "Product data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created succesfully ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List products",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": true,
            "schema": {
              "$ref":"#/components/schemas/ProductCategory"
            },
            "description": "Product Category"
          }
        ],
        "responses": {
          "200": {
            "description": "Products listed succesfully ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProductsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product Id"
          }
        ],
        "requestBody": {
          "description": "Product data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product Updated succesfully ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product Id"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted succesfully"
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shopping-cart/items": {
      "post": {
        "tags": [
          "Shopping Cart"
        ],
        "summary": "Add product to shopping cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToShoppingCartRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Product added successfully"
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shopping-cart": {
      "get": {
        "tags": [
          "Shopping Cart"
        ],
        "summary": "Get shopping cart details by customer ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0192ab57-ed54-762a-be5c-4da7ce1cc440"
            },
            "description": "Customer ID to retrieve the shopping cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Shopping cart retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShoppingCartResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/ready": {
      "patch": {
        "tags": [
          "Orders"
        ],
        "summary": "Complete order preparation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order Id"
          }
        ],
        "responses": {
          "204": {
            "description": "Order completed successfully"
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductCategory": {
        "type": "string",
        "enum": ["Bebida", "Acompanhamento", "Lanche", "Sobremesa"],
        "title": "Product Category"
      },
      "AddProductToShoppingCartRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "0192ab57-ed54-762a-be5c-4da7ce1cc440",
            "description": "Id do produto"
          },
          "observation": {
            "type": "string",
            "example": "Sem gelo",
            "description": "Observação"
          },
          "quantity": {
            "type": "number",
            "example": 2,
            "description": "Quantidade",
            "minimum": 1
          },
          "customerId": {
            "type": "string",
            "description": "Id do cliente",
            "example": "0192ab57-ed54-762a-be5c-4da7ce1cc440"
          }
        },
        "required": [
          "productId",
          "customerId",
          "quantity"
        ],
        "description": "Requisição para adicionar produto no carrinho de compras"
      },
      "CreateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Produto X",
            "description": "Nome do produto a ser criado."
          },
          "description": {
            "type": "string",
            "example": "Detalhes do produto X",
            "description": "Descrição detalhada do produto, incluindo características e benefícios."
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99,
            "description": "Preço do produto. Deve ser um valor numérico positivo.",
            "minimum": 0.01
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategory"
          }
        },
        "required": [
          "name",
          "category",
          "price"
        ],
        "description": "Requisição para criar um novo produto. Inclui o nome, descrição, preço e categoria do produto."
      },
      "CreateProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "019160ee-7929-72d3-99cf-6c7f33789ba8",
            "description": "Identificador único do produto criado."
          },
          "name": {
            "type": "string",
            "example": "Produto X",
            "description": "Nome do produto."
          },
          "description": {
            "type": "string",
            "example": "Detalhes do produto X",
            "description": "Descrição do produto."
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99,
            "description": "Preço do produto.",
            "minimum": 0.01
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategory"
          }
        },
        "description": "Resposta retornada ao criar um novo produto. Contém o identificador único do produto."
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Produto X",
            "description": "Nome do produto a ser criado."
          },
          "description": {
            "type": "string",
            "example": "Detalhes do produto X",
            "description": "Descrição detalhada do produto, incluindo características e benefícios."
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99,
            "description": "Preço do produto. Deve ser um valor numérico positivo.",
            "minimum": 0.01
          }
        },
        "description": "Requisição para alterar um novo produto"
      },
      "UpdateProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "019160ee-7929-72d3-99cf-6c7f33789ba8",
            "description": "Identificador único do produto criado."
          },
          "name": {
            "type": "string",
            "example": "Produto X",
            "description": "Nome do produto."
          },
          "description": {
            "type": "string",
            "example": "Detalhes do produto X",
            "description": "Descrição do produto."
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99,
            "description": "Preço do produto.",
            "minimum": 0.01
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategory"
          }
        },
        "description": "Resposta retornada ao criar um novo produto. Contém o identificador único do produto."
      },
      "ListProductsResponse": {
        "type": "array",
        "items": {
          "properties": {
            "id": {
              "type": "string",
              "example": "019160ee-7929-72d3-99cf-6c7f33789ba8",
              "description": "Identificador único do produto criado."
            },
            "name": {
              "type": "string",
              "example": "Produto X",
              "description": "Nome do produto."
            },
            "description": {
              "type": "string",
              "example": "Detalhes do produto X",
              "description": "Descrição do produto."
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 99.99,
              "description": "Preço do produto."
            },
            "category": {
              "$ref": "#/components/schemas/ProductCategory"
            }
          }
        },
        "description": "Resposta retornada ao alterar um novo produto."
      },
      "GetShoppingCartResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "example": "0192ab57-ed54-762a-be5c-4da7ce1cc440",
            "description": "ID of the customer"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "1fe16abe-6bdb-44b7-9adf-cc8715cbb8bb",
                  "description": "ID of the product"
                },
                "productName": {
                  "type": "string",
                  "example": "Produto Exemplo",
                  "description": "Name of the product"
                },
                "productPrice": {
                  "type": "number",
                  "example": 9.9,
                  "description": "Price of the product"
                },
                "productDescription": {
                  "type": "string",
                  "example": "Descrição do Produto Exemplo",
                  "description": "Description of the product"
                },
                "observation": {
                  "type": "string",
                  "example": "Com Limão e Gelo",
                  "description": "Observation for the product"
                },
                "productCategory": {
                  "type": "string",
                  "example": "Bebida",
                  "description": "Category of the product"
                },
                "quantity": {
                  "type": "number",
                  "example": 1,
                  "description": "Quantity of the product"
                },
                "totalPrice": {
                  "type": "number",
                  "example": 9.9,
                  "description": "Total price of the shopping cart"
                }
              }
            },
            "description": "List of items in the shopping cart"
          }
        },
        "description": "Response schema for retrieving the shopping cart details"
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Ocorreu um erro interno",
            "description": "Mensagem de erro genérica indicando que um problema inesperado ocorreu no servidor."
          }
        },
        "description": "Resposta de erro genérica para falhas inesperadas no servidor. Inclui uma mensagem de erro."
      }
    }
  }
}